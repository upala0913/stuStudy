<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.issCollege.stustudy.mapper.ExamAllViewMapper">
  <resultMap id="BaseResultMap" type="com.issCollege.stustudy.po.ExamAllView">
    <result column="stuId" jdbcType="BIGINT" property="stuid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="courseId" jdbcType="BIGINT" property="courseid" />
    <result column="courseName" jdbcType="VARCHAR" property="coursename" />
    <result column="examId" jdbcType="BIGINT" property="examid" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stuId, name, courseId, courseName, examId, grade, created
  </sql>
  <select id="selectByExample" parameterType="com.issCollege.stustudy.po.ExamAllViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_all_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.issCollege.stustudy.po.ExamAllViewExample">
    delete from exam_all_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.issCollege.stustudy.po.ExamAllView">
    insert into exam_all_view (stuId, name, courseId, 
      courseName, examId, grade, 
      created)
    values (#{stuid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{courseid,jdbcType=BIGINT}, 
      #{coursename,jdbcType=VARCHAR}, #{examid,jdbcType=BIGINT}, #{grade,jdbcType=INTEGER}, 
      #{created,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.issCollege.stustudy.po.ExamAllView">
    insert into exam_all_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        stuId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="courseid != null">
        courseId,
      </if>
      <if test="coursename != null">
        courseName,
      </if>
      <if test="examid != null">
        examId,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="created != null">
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        #{stuid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=BIGINT},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="examid != null">
        #{examid,jdbcType=BIGINT},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.issCollege.stustudy.po.ExamAllViewExample" resultType="java.lang.Long">
    select count(*) from exam_all_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_all_view
    <set>
      <if test="record.stuid != null">
        stuId = #{record.stuid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.courseid != null">
        courseId = #{record.courseid,jdbcType=BIGINT},
      </if>
      <if test="record.coursename != null">
        courseName = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.examid != null">
        examId = #{record.examid,jdbcType=BIGINT},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_all_view
    set stuId = #{record.stuid,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      courseId = #{record.courseid,jdbcType=BIGINT},
      courseName = #{record.coursename,jdbcType=VARCHAR},
      examId = #{record.examid,jdbcType=BIGINT},
      grade = #{record.grade,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>